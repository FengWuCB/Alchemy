# --------------------------------------------------------------
#  CMakeLists.txt for simples module
# --------------------------------------------------------------

function(add_simples name)
    if (USE_CUDA AND CUDA_FOUND)
        set_source_files_properties(${name}.cpp PROPERTIES CUDA_SOURCE_PROPERTY_FORMAT OBJ)
        cuda_add_executable(${name} ${name}.cpp)
    else()
        add_executable(${name} ${name}.cpp)
    endif()
    target_link_libraries(${name} ${ALCHEMY_LIBS} ${LINK_LIBS})

    set_property(TARGET ${name} PROPERTY FOLDER "simples")
endfunction()

add_simples(MatrixOperations)
add_simples(MatrixThreshold)
add_simples(MatrixROI)

add_simples(VideoCapture)
add_simples(Filters)
add_simples(FindContours)
add_simples(Morp)


#add_simples(roi)
#add_simples(fft)
#add_simples(split_merge)
#add_simples(filter)
#add_simples(morp)
#add_simples(threshold)
#add_simples(operations)
#add_simples(atlas)
#add_simples(nnpack)
#add_simples(net_01)
#add_simples(net_02_cross_entropy)
#add_simples(net_03_tanh)
#add_simples(net_04_softmax)
#add_simples(net_05_relu)
#add_simples(net_06_cnn)
#add_simples(net_07_dropout)
#add_simples(net_08_cudnn_cnn)
#add_simples(net_09_momentum_optimizer)
#add_simples(cublas)
#add_simples(tensor)
#add_simples(lbp)
#add_simples(cp)
#add_simples(lenet)
#add_simples(find_contours)
#add_simples(conv_with_cudnn)
#add_simples(pooling_layer)
#add_simples(create_picture)
#add_simples(read_cp)
#add_simples(sand)
#add_simples(sand_cnn)
